{"ast":null,"code":"var _jsxFileName = \"/Users/Rodri/Desktop/MadridCentral/madrid-central/src/components/Resident.js\";\nimport React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { drizzleConnect } from \"drizzle-react\";\nimport ContractData from \"../ContractData\";\nimport ContractForm from \"../ContractForm\";\nimport ExistingResident from \"./ExistingResident\";\nimport PropTypes from \"prop-types\";\n\nclass Resident extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      dataKey: this.contracts[\"MadridCentral\"].methods[\"residentExists\"].cacheCall(),\n      dataKey2: this.contracts[\"MadridCentral\"].methods[\"residents\"].cacheCall(this.props.accounts[0])\n    };\n  }\n\n  render() {\n    if (!(this.state.dataKey in this.props.MadridCentral.residentExists)) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Fetching...\");\n    }\n\n    var exisistingResident = this.props.MadridCentral[\"residentExists\"][this.state.dataKey];\n\n    if (!(this.state.dataKey2 in this.props.MadridCentral.residents)) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Fetching...\");\n    }\n\n    var resident = this.props.MadridCentral[\"residents\"][this.state.dataKey2].args[0];\n    console.log(resident);\n    console.log(this);\n\n    if (exisistingResident.value) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ExistingResident, {\n        direccion: resident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/newResident\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }\n\n} // <ContractData contract={resident} method=\"getPrice\"/>\n\n\nResident.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    MadridCentral: state.contracts.MadridCentral,\n    accounts: state.accounts\n  };\n};\n\nexport default drizzleConnect(Resident, mapStateToProps);","map":{"version":3,"sources":["/Users/Rodri/Desktop/MadridCentral/madrid-central/src/components/Resident.js"],"names":["React","Redirect","withRouter","drizzleConnect","ContractData","ContractForm","ExistingResident","PropTypes","Resident","Component","constructor","props","context","contracts","drizzle","state","dataKey","methods","cacheCall","dataKey2","accounts","render","MadridCentral","residentExists","exisistingResident","residents","resident","args","console","log","value","contextTypes","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC3B,UAAMD,KAAN;AACA,SAAKE,SAAL,GAAiBD,OAAO,CAACE,OAAR,CAAgBD,SAAjC;AACA,SAAKE,KAAL,GAAa;AACPC,MAAAA,OAAO,EAAE,KAAKH,SAAL,CAAe,eAAf,EAAgCI,OAAhC,CAAwC,gBAAxC,EAA0DC,SAA1D,EADF;AAEPC,MAAAA,QAAQ,EAAE,KAAKN,SAAL,CAAe,eAAf,EAAgCI,OAAhC,CAAwC,WAAxC,EAAqDC,SAArD,CAA+D,KAAKP,KAAL,CAAWS,QAAX,CAAoB,CAApB,CAA/D;AAFH,KAAb;AAIA;;AAEDC,EAAAA,MAAM,GAAI;AAET,QAAI,EAAE,KAAKN,KAAL,CAAWC,OAAX,IAAsB,KAAKL,KAAL,CAAWW,aAAX,CAAyBC,cAAjD,CAAJ,EAAsE;AACjE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAEJ,QAAIC,kBAAkB,GAAG,KAAKb,KAAL,CAAWW,aAAX,CAAyB,gBAAzB,EAA2C,KAAKP,KAAL,CAAWC,OAAtD,CAAzB;;AAEA,QAAI,EAAE,KAAKD,KAAL,CAAWI,QAAX,IAAuB,KAAKR,KAAL,CAAWW,aAAX,CAAyBG,SAAlD,CAAJ,EAAkE;AAC7D,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAEJ,QAAIC,QAAQ,GAAG,KAAKf,KAAL,CAAWW,aAAX,CAAyB,WAAzB,EAAsC,KAAKP,KAAL,CAAWI,QAAjD,EAA2DQ,IAA3D,CAAgE,CAAhE,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AAGA,QAAIL,kBAAkB,CAACM,KAAvB,EAA8B;AAC7B,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEJ,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAMA,KAPD,MAOO;AACN,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAMA;AACD;;AA3CqC,C,CA8CvC;;;AACAlB,QAAQ,CAACuB,YAAT,GAAwB;AACtBjB,EAAAA,OAAO,EAAEP,SAAS,CAACyB;AADG,CAAxB;;AAIA,MAAMC,eAAe,GAAGlB,KAAK,IAAI;AAC/B,SAAO;AACLO,IAAAA,aAAa,EAAEP,KAAK,CAACF,SAAN,CAAgBS,aAD1B;AAELF,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AAFX,GAAP;AAID,CALD;;AAOA,eAAejB,cAAc,CAACK,QAAD,EAAWyB,eAAX,CAA7B","sourcesContent":["import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { drizzleConnect } from \"drizzle-react\";\nimport ContractData from \"../ContractData\";\nimport ContractForm from \"../ContractForm\";\nimport ExistingResident from \"./ExistingResident\";\nimport PropTypes from \"prop-types\";\n\n\nclass Resident extends React.Component {\n\t\n\tconstructor(props, context) {\n\t\tsuper(props);\n\t\tthis.contracts = context.drizzle.contracts;\n\t\tthis.state = {\n      \t\tdataKey: this.contracts[\"MadridCentral\"].methods[\"residentExists\"].cacheCall(),\n      \t\tdataKey2: this.contracts[\"MadridCentral\"].methods[\"residents\"].cacheCall(this.props.accounts[0]),\n    \t};\n\t}\n\n\trender () {\n\n\t\tif (!(this.state.dataKey in this.props.MadridCentral.residentExists)) {\n\t      return <span>Fetching...</span>;\n\t    }\n\n\t\tvar exisistingResident = this.props.MadridCentral[\"residentExists\"][this.state.dataKey];\n\n\t\tif (!(this.state.dataKey2 in this.props.MadridCentral.residents)) {\n\t      return <span>Fetching...</span>;\n\t    }\n\n\t\tvar resident = this.props.MadridCentral[\"residents\"][this.state.dataKey2].args[0];\n\t\tconsole.log(resident);\n\t\tconsole.log(this);\n\n\n\t\tif (exisistingResident.value) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<ExistingResident direccion={resident} />\n\t\t\t\t</div>\n\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Redirect to=\"/newResident\" />\n\t\t\t\t</div>\n\n\t\t\t);\n\t\t}\n\t}\n}\n\n// <ContractData contract={resident} method=\"getPrice\"/>\nResident.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n  return {\n    MadridCentral: state.contracts.MadridCentral,\n    accounts: state.accounts\n  };\n};\n\nexport default drizzleConnect(Resident, mapStateToProps);"]},"metadata":{},"sourceType":"module"}