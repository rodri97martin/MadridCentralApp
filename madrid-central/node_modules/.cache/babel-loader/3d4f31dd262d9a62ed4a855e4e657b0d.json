{"ast":null,"code":"var _jsxFileName = \"/Users/Rodri/Desktop/MadridCentralApp/madrid-central/src/components/ActualDay.js\";\nimport React from 'react';\nimport { drizzleConnect } from 'drizzle-react';\nimport PropTypes from 'prop-types';\nimport ContractData from '../ContractData';\nimport { Card, Row, Col, Alert } from \"react-bootstrap\";\n\nclass ActualDayActivator extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.drizzle = context.drizzle;\n  }\n\n  componentDidMount() {\n    console.log(\"==== COMPONENTE ActualDay MONTADO ============\", this.props.direccion);\n\n    const json = require('../contracts/Day.json');\n\n    const contractConfig = {\n      contractName: this.props.direccion,\n      web3Contract: new this.drizzle.web3.eth.Contract(json.abi, this.props.direccion)\n    };\n    this.drizzle.addContract(contractConfig, []);\n  }\n\n  componentWillUnmount() {\n    console.log(\"==== COMPONENTE ActualDay DESMONTADO ============\", this.props.direccion);\n    this.drizzle.deleteContract(this.props.direccion);\n  }\n\n  render() {\n    const mapStateToProps = state => {\n      return {\n        ActualDay: state.contracts[this.props.direccion],\n        accounts: state.accounts\n      };\n    };\n\n    const ActualDayContainer = drizzleConnect(ActualDay, mapStateToProps);\n    return React.createElement(ActualDayContainer, {\n      direccion: this.props.direccion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass ActualDay extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.contracts = context.drizzle.contracts;\n  }\n\n  render() {\n    let matricula;\n    const instanceState = this.props.ActualDay;\n\n    if (instanceState && instanceState.initialized) {\n      matricula = React.createElement(ContractData, {\n        contract: this.props.direccion,\n        method: \"getTodayInvitation\",\n        methodArgs: [this.props.accounts[0]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Card, {\n      style: {\n        width: '30rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Ya tienes una invitaci\\xF3n para el d\\xEDa de hoy\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttonCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Alert.Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Hey, nice to see you\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"))))))));\n  }\n\n}\n\n;\nActualDayActivator.contextTypes = {\n  drizzle: PropTypes.object\n};\nActualDay.contextTypes = {\n  drizzle: PropTypes.object\n};\nexport default ActualDayActivator;","map":{"version":3,"sources":["/Users/Rodri/Desktop/MadridCentralApp/madrid-central/src/components/ActualDay.js"],"names":["React","drizzleConnect","PropTypes","ContractData","Card","Row","Col","Alert","ActualDayActivator","Component","constructor","props","context","drizzle","componentDidMount","console","log","direccion","json","require","contractConfig","contractName","web3Contract","web3","eth","Contract","abi","addContract","componentWillUnmount","deleteContract","render","mapStateToProps","state","ActualDay","contracts","accounts","ActualDayContainer","matricula","instanceState","initialized","width","contextTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { drizzleConnect } from 'drizzle-react';\nimport PropTypes from 'prop-types';\nimport ContractData from '../ContractData';\nimport { Card, Row, Col, Alert } from \"react-bootstrap\";\n\nclass ActualDayActivator extends React.Component {\n\n    constructor(props, context) {\n        super(props)\n        this.drizzle = context.drizzle;\n    }\n\n    componentDidMount() {\n\n        console.log(\"==== COMPONENTE ActualDay MONTADO ============\", this.props.direccion );\n\n        const json = require('../contracts/Day.json');\n\n          const contractConfig = {\n             contractName: this.props.direccion,\n             web3Contract: new this.drizzle.web3.eth.Contract(json.abi, this.props.direccion)\n          };\n\n          this.drizzle.addContract(contractConfig, []);\n    }\n\n    componentWillUnmount() {\n\n      console.log(\"==== COMPONENTE ActualDay DESMONTADO ============\", this.props.direccion );\n\n      this.drizzle.deleteContract(this.props.direccion);\n    }\n\n    render() {\n        const mapStateToProps = state => {\n            return {\n                ActualDay: state.contracts[this.props.direccion],\n                accounts: state.accounts\n            }\n        };\n\n        const ActualDayContainer = drizzleConnect(ActualDay, mapStateToProps);\n\n        return <ActualDayContainer direccion={this.props.direccion} />;\n    }\n}\n\n\nclass ActualDay extends React.Component {\n\n  constructor(props, context) {\n    super(props);\n    this.contracts = context.drizzle.contracts;\n  }\n\n  render() {\n\n    let matricula;\n\n    const instanceState = this.props.ActualDay;\n\n    if (instanceState && instanceState.initialized) {\n\n      matricula = <ContractData contract={this.props.direccion} method=\"getTodayInvitation\" methodArgs={[this.props.accounts[0]]} />\n\n    }\n\n    return (\n      <div>\n          <div>\n          <br></br>\n          <Card style={{ width: '30rem'}}>\n            <h4>Ya tienes una invitación para el día de hoy</h4>\n              <Row>\n                <Col>\n                  <div className=\"buttonCenter\">\n                    <Alert variant=\"success\">\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\n  <p>\n    Aww yeah, you successfully read this important alert message. This example\n    text is going to run a bit longer so that you can see how spacing within an\n    alert works with this kind of content.\n  </p>\n  <hr />\n  <p className=\"mb-0\">\n    Whenever you need to, be sure to use margin utilities to keep things nice\n    and tidy.\n  </p>\n</Alert>\n                </div>\n                </Col>\n              </Row>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n};\n\n\nActualDayActivator.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nActualDay.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default ActualDayActivator;\n"]},"metadata":{},"sourceType":"module"}