{"ast":null,"code":"var _jsxFileName = \"/Users/Rodri/Desktop/MadridCentral/madrid-central/src/components/DepositWithdraw.js\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { drizzleConnect } from \"drizzle-react\";\nimport ContractForm from \"./ContractForm\";\nimport ContractData from \"./ContractData\";\n\nclass DepositWithdraw extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.contracts = context.drizzle.contracts;\n    this.state = {\n      dataKey: this.contracts[\"MadridCentral\"].methods[\"getBalance\"].cacheCall({\n        from: this.props.accounts[0]\n      })\n    };\n    console.log(this);\n  }\n\n  render() {\n    if (!(this.state.dataKey in this.props.MadridCentral.getBalance)) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Fetching...\");\n    }\n\n    var balance = this.props.MadridCentral[\"getBalance\"][this.state.dataKey];\n    console.log(balance);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ContractForm, {\n      contract: \"MadridCentral\",\n      method: \"deposit\",\n      sendArgs: {\n        from: this.props.accounts[0],\n        value: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(ContractData, {\n      contract: \"MadridCentral\",\n      method: \"getBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Retirar fondos\"));\n  }\n\n}\n\nDepositWithdraw.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    MadridCentral: state.contracts.MadridCentral,\n    accounts: state.accounts\n  };\n};\n\nexport default drizzleConnect(DepositWithdraw, mapStateToProps);","map":{"version":3,"sources":["/Users/Rodri/Desktop/MadridCentral/madrid-central/src/components/DepositWithdraw.js"],"names":["React","PropTypes","drizzleConnect","ContractForm","ContractData","DepositWithdraw","Component","constructor","props","context","contracts","drizzle","state","dataKey","methods","cacheCall","from","accounts","console","log","render","MadridCentral","getBalance","balance","value","contextTypes","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC3B,UAAMD,KAAN;AACA,SAAKE,SAAL,GAAiBD,OAAO,CAACE,OAAR,CAAgBD,SAAjC;AACA,SAAKE,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,KAAKH,SAAL,CAAe,eAAf,EAAgCI,OAAhC,CAAwC,YAAxC,EAAsDC,SAAtD,CAAgE;AAACC,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,QAAX,CAAoB,CAApB;AAAP,OAAhE;AADG,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA;;AAEDC,EAAAA,MAAM,GAAI;AAET,QAAI,EAAE,KAAKR,KAAL,CAAWC,OAAX,IAAsB,KAAKL,KAAL,CAAWa,aAAX,CAAyBC,UAAjD,CAAJ,EAAkE;AAC7D,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAED,QAAIC,OAAO,GAAG,KAAKf,KAAL,CAAWa,aAAX,CAAyB,YAAzB,EAAuC,KAAKT,KAAL,CAAWC,OAAlD,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAC,eAAvB;AAAuC,MAAA,MAAM,EAAC,SAA9C;AAAwD,MAAA,QAAQ,EAAE;AAACP,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,QAAX,CAAoB,CAApB,CAAP;AAA+BO,QAAAA,KAAK,EAAE;AAAtC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAEF,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAC,eAAvB;AAAuC,MAAA,MAAM,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,EAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHE,CADD;AAQH;;AA3B4C;;AA8B9CnB,eAAe,CAACoB,YAAhB,GAA+B;AAC7Bd,EAAAA,OAAO,EAAEV,SAAS,CAACyB;AADU,CAA/B;;AAIA,MAAMC,eAAe,GAAGf,KAAK,IAAI;AAC/B,SAAO;AACLS,IAAAA,aAAa,EAAET,KAAK,CAACF,SAAN,CAAgBW,aAD1B;AAELJ,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AAFX,GAAP;AAID,CALD;;AAOA,eAAef,cAAc,CAACG,eAAD,EAAkBsB,eAAlB,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { drizzleConnect } from \"drizzle-react\";\nimport ContractForm from \"./ContractForm\";\nimport ContractData from \"./ContractData\";\n\nclass DepositWithdraw extends React.Component {\n\n\tconstructor(props, context) {\n\t\tsuper(props);\n\t\tthis.contracts = context.drizzle.contracts;\n\t\tthis.state = {\n\t\t\tdataKey: this.contracts[\"MadridCentral\"].methods[\"getBalance\"].cacheCall({from: this.props.accounts[0]}),\n\t\t}\n\t\tconsole.log(this);\n\t}\n\n\trender () {\n\n\t\tif (!(this.state.dataKey in this.props.MadridCentral.getBalance)) {\n\t      return <span>Fetching...</span>;\n\t    }\n\n\t    var balance = this.props.MadridCentral[\"getBalance\"][this.state.dataKey];\n\t    console.log(balance);\n\t    return(\n\t    \t<div>\n\t\t\t\t<ContractForm contract=\"MadridCentral\" method=\"deposit\" sendArgs={{from: this.props.accounts[0], value: 1000}} />\n\t\t\t\t<ContractData contract=\"MadridCentral\" method=\"getBalance\"/>\n\t\t\t\t<button>Retirar fondos</button>\n\t\t\t</div>\n\t    );\n\t\t\n\t}\t\n}\n\nDepositWithdraw.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n  return {\n    MadridCentral: state.contracts.MadridCentral,\n    accounts: state.accounts\n  };\n};\n\nexport default drizzleConnect(DepositWithdraw, mapStateToProps);\n\n"]},"metadata":{},"sourceType":"module"}